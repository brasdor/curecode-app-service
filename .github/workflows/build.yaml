name: Build

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

env:
  REGISTRY_LOGIN_SERVER: curecodedev.azurecr.io
  AZURE_APP_SERVICE_NAME_STAGING: app-curecode-app-staging
  AZURE_APP_SERVICE_NAME_PRODUCTION: app-curecode-app-production

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run-script build

      - name: Start test dependencies
        run: docker compose up --wait

      - name: Run migrations
        run: npm run-script db:migrations:run

      - name: Test app
        run: npm test

      - name: Stop test dependencies
        if: ${{ always() }}
        run: docker compose down --volumes

  package:
    needs: build
    if: github.ref_type == 'tag'
    runs-on: ubuntu-22.04

    # permissions based on
    # https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      fqin: ${{ steps.fqin.outputs.result }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_LOGIN_SERVER }}/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=sha,format=long

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}

      - name: Get fully qualified image name
        uses: actions/github-script@v7
        id: fqin
        env:
          SHA: ${{ github.sha }}
          META: ${{ steps.meta.outputs.json }}
        with:
          script: |
            const { SHA, META } = process.env
            const meta = JSON.parse(META)
            return meta.tags.find(tag => tag.endsWith(":sha-" + SHA))
          result-encoding: string

  staging-deploy:
    needs: package
    if: github.ref_type == 'tag' && github.ref_name == 'staging'

    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Run Database Migrations"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_STAGING }}
        run: |
          npm ci
          npx prisma migrate deploy

      - name: "Deploy to Staging WebApp"
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_APP_SERVICE_NAME_STAGING }}
          publish-profile: ${{ secrets.AZURE_APP_SERVICE_PUBLISH_PROFILE_STAGING }}
          images: ${{ needs.package.outputs.fqin }}

  production-deploy:
    needs: package
    if: github.ref_type == 'tag' && github.ref_name == 'production'

    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Run Database Migrations"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PRODUCTION }}
        run: |
          npm ci
          npx prisma migrate deploy

      - name: "Deploy to Production WebApp"
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_APP_SERVICE_NAME_PRODUCTION }}
          publish-profile: ${{ secrets.AZURE_APP_SERVICE_PUBLISH_PROFILE_PRODUCTION }}
          images: ${{ needs.package.outputs.fqin }}
